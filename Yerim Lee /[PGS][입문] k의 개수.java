
// -----------------------------------------------------------
// my-answer--------------------------------------------------
class Solution {
    public int solution(int i, int j, int k) {
        int answer = 0;
        
        for(int a = i; a <= j; a++){
            int b = a;
            if(a!=k){
                while(b%10 != b){ // 나머지가 자기 자신의 값과 같을 때까지 - 자신의 수를 하나씩 확인하는 방법
                    if(b%10 == k){ // 나머지로 나온 것이 k값과 같다면
                        answer++;
                    }
                    b = (b - b%10) / 10; // 나머지 이미 비교해서 확인했다면 없애기
                }
                if(b==k){ // 마지막 나머지(가장 첫째 자리 수)가 k의 값과 같다면
                    answer++;
                }
            }
            else{ // 한 자리 수일 때 k와 같은 값인 경우 
                answer++;
            }
            
        }
               
        return answer;
    }
}

// 어떻게 분류되고, 예외가 발생할지 미리 계산해두고 코드 작성하기

// -----------------------------------------------------------
// good-code1-------------------------------------------------
class Solution {
    public int solution(int i, int j, int k) {
        String str = "";
        for(int a = i; a <= j; a++) {
            str += a+"";
        }

        return str.length() - str.replace(k+"", "").length();
    }
}

// 한번에 합쳐서 replace(k + "") 하면 진짜 그 부분이 없어지면서 길이를 잴 필요가 없음

// -----------------------------------------------------------
// good-code2-------------------------------------------------
class Solution {
    public int solution(int i, int j, int k) {
        int answer = 0;

        for (int num = i; num <= j; num++){
            int tmp = num;
            while (tmp != 0){
                if (tmp % 10 == k)
                    answer++;
                tmp /= 10;
            }
        }
        return answer;
    }
}

// while(tmp != 0) // 이렇게 하면 되네.. 진짜 그렇네.. 나머지가 0일 때가 결국 1자리 남은 것을 의미하니까
// 그리고 나처럼 하는 건 두 단계를 들어가는 건데(b%10 != b(이 과정에 왜 꼭 필요했을까..? 하나하나씩 확인하는 것의 끝자리를 0이 아니라 한자리 수라고 생각해서 그런 것 같음) 
// 그리고 나머지가 꼭 0이 아니어도 몫만 나오게 만드는 건데 그걸 고려하지 못했던 것 같다.) 그거를 tmp % 10 == k로 하면 하나로 합쳐서 보여줄 수 있네..
// 마지막까지 보는 방법 좀 더 크게 보는 방법 뭐라고 해야 더 구체적인 것인지를 잘 모르겠으나 뭔가 크게 보는 방법을 익혀야 할 것 같다.
// 너무 기본적인 걸 모르는 것 같았던 부분이었음

